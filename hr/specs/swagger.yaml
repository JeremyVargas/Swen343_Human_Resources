################################################################################
#                                                                              #
#                                 Human Resources                              #
#                                                                              #
################################################################################
swagger: '2.0'

info:
  version: "0.2.0"
  title: Human Resources API

produces:
  - application/json
consumes:
  - application/json

################################################################################
#                                                                              #
#                                 ToDo/Questions                               #
#                                                                              #
################################################################################
#
# 1. Look into including additional parameters/filters
# 2. Add security and authentication (checkout Instagram's api example)
#
################################################################################
#                                                                              #
#                                 Paths                                        #
#                                                                              #
################################################################################
paths:
#                                                                              #
#                                 /employees                                   #
#                                                                              #
  /employee:
    get:
      operationId: controllers.employees.get
      description:
        Gets a list of of all of the employees or a single employee currently in the system
      parameters:
        - $ref: "#/parameters/employee_id"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              employee_array:
                type: array
                items:
                  $ref: "#/definitions/Employee"
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: controllers.employees.post
      description:
        Adds a single employee into the system
      parameters:
        - name: employee
          in: body
          schema:
            $ref: "#/definitions/EmployeePost"
          required: true
          description:
            This is an Employee object that can only post information that can be modified.
            This is similar to patching, but requires that the employee to not currently exist in the system yet.
      responses:
        204:
          description: Employee created!
        400:
          description: Employee could not be created.
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"
    patch:
      operationId: controllers.employees.patch
      description:
        Changes the information of a single employee
      parameters:
        - name: employee
          in: body
          schema:
            $ref: "#/definitions/EmployeePatch"
          required: true
          description:
            This is a partial or full Employee object that describes what information needs to be changed
            for a particular employee. This is similar to posting but does not require the full object.
      responses:
        200:
          description: Employee information found and changed
        default:
          description: Employee either not found or

    delete:
      operationId: controllers.employees.delete
      description:
        Deletes a single employee
      parameters:
        - name: employee_id
          in: query
          type: integer
          required: true
          description: The employee id by which to look up the appropriate Employee object to delete.
      responses:
        200:
          description: Employee deleted
        default:
          description: Employee not deleted


  /employee/{employee_id}:
    get:
      operationId: controllers.employee.get
      description:
        A single employee currently in the system
      parameters:
        - name: employee_id
          in: path
          type: integer
          required: true
          description: The employee id by which to look up the appropriate Employee object to delete.
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              employee_array:
                type: array
                items:
                  $ref: "#/definitions/Employee"
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"

  /rewards:
    get:
      operationId: controllers.rewards.get
      description: A set of employees that are valid for rewards and their relevant information
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              employee_array:
                type: array
                items:
                  $ref: "#/definitions/Employee_Reward"
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: controllers.rewards.post
      description:
        Adds reward information for an employee
      parameters:
        - name: employee
          in: body
          schema:
            $ref: "#/definitions/Reward"
          required: true
          description:
            This is the entry of reward relevant information for a particular employee
      responses:
        204:
          description: Rewards input!
        400:
          description: Reward could not be input.
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"


  /confirm_login/{department}/{token}:
    get:
      operationId: controllers.authentication.get
      description:
        Confirm token is authorized
      parameters:
        - name: token
          in: path
          type: string
          required: true
          description: The token to be authenticated
        - name: department
          in: path
          type: string
          required: true
          description: The department to be authenticated
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              employee_id:
                type: integer
        default:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/Error"

################################################################################
#                                                                              #
#                                 Definitions                                  #
#                                                                              #
################################################################################

definitions:
#                                                                              #
#                                 Employee                                     #
#                                                                              #
  Employee:
    type: object
    properties:
      is_active:
        type: boolean
      employee_id:
        type: integer
      name:
        type: string
      email:
        type: string
      birth_date:
        type: string
        format: date_time
      address:
        type: string
        description: Accepts standard full addresses e.g. 1111 blank st., New York, New York 11217
      department:
        type: string
      role:
        type: string
      team_start_date:
        type: string
        format: date_time
      start_date:
        type: string
        format: date_time
      salary:
        type: integer

#                                                                              #
#                                 EmployeePost                                 #
#                                                                              #
  EmployeePost:
    required:
      - is_active
      - fname
      - lname
      - birth_date
      - address
      - department
      - role
      - start_date
      - email
    type: object
    properties:
      is_active:
        type: boolean
      fname:
        type: string
      lname:
        type: string
      email:
        type: string
      birth_date:
        type: string
        format: date
      address:
        type: string
        description: Accepts standard full addresses e.g. 1111 blank st., New York, New York 11217
      department:
        type: string
      role:
        type: string
      start_date:
        type: string
        format: date

#                                                                              #
#                                 EmployeePatch                                #
#                                                                              #
  EmployeePatch:
    required:
      - employee_id
    type: object
    properties:
      is_active:
        type: boolean
      employee_id:
        type: integer
      fname:
        type: string
      lname:
        type: string
      email:
        type: string
      birth_date:
        type: string
        format: date
      address:
        type: string
        description: Accepts standard full addresses e.g. 1111 blank st., New York, New York 11217
      address_start_date:
        type: string
        format: date
      department:
        type: string
      role:
        type: string
      department_start_date:
        type: string
        format: date
      role_start_date:
        type: string
        format: date
      start_date:
        type: string
        format: date
      salary:
        type: integer

#                                                                              #
#                                 Employee_Reward                              #
#                                                                              #
  Employee_Reward:
    type: object
    properties:
      employee_id:
        type: integer
      name:
        type: string
      phones:
        type: integer
      orders:
        type: integer

#                                                                              #
#                                 Reward                                       #
#                                                                              #
  Reward:
    required:
      - employeeId
      - replace
      - orderId
      - serialIds
    type: object
    properties:
      employeeId:
        type: integer
      replace:
        type: boolean
      orderId:
        type: integer
      serialIds:
        type: array
        items:
          type: integer


#                                                                              #
#                                 Error                                        #
#                                                                              #
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

################################################################################
#                                                                              #
#                                 Parameters                                   #
#                                                                              #
################################################################################
parameters:
  employee_id:
    name: employee_id
    in: query
    type: array
    items:
      type: integer
    required: false
    description: id of a particular employee or set of employees
